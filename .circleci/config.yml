version: 2.1

commands:
  set-build-tools-env:
    description: "Set need environment variables needed for Build Tools"
    steps:
      - run:
          name: Setup Build Tool Environment Variables
          command: |
            echo "export GIT_BRANCH=${CIRCLE_BRANCH}" >> $BASH_ENV
            if [ -z ${CIRCLE_PULL_REQUEST+x} ]; then echo "export IS_PULL_REQUEST='false'"; else echo "export IS_PULL_REQUEST='true'"; fi  >> $BASH_ENV
            source $BASH_ENV

  build:
    description: "Build Docker image via Build Tools"
    steps:
      - checkout
      - run:
          name: Build Docker Image
          command: ./.ci/build.sh -f Dockerfile --image ${DOCKER_IMAGE}:${CIRCLE_SHA1}

  save-docker-image:
    description: "Saves a Docker image for future Jobs"
    steps:
      - run: mkdir -p /tmp/docker-images/
      - run:
          name: Saving Docker Image
          command: docker save --output /tmp/docker-images/${DOCKER_NAMESPACE}-${DOCKER_IMAGE}-$(docker version -f {{.Server.Arch}})-${CIRCLE_SHA1}.tar ${DOCKER_NAMESPACE}/${DOCKER_IMAGE}:$(docker version -f {{.Server.Arch}})-${CIRCLE_SHA1}
      - persist_to_workspace:
          root: /tmp
          paths:
            - docker-images/*

  load-docker-image:
    description: "Loads a Docker image"
    steps:
      - attach_workspace:
          at: /tmp
      - run:
            name: Loading Docker Image
            command: docker load --input /tmp/docker-images/${DOCKER_NAMESPACE}-${DOCKER_IMAGE}-$(docker version -f {{.Server.Arch}})-${CIRCLE_SHA1}.tar

  test:
    description: "Launches tests against the Docker image"
    steps:
      - checkout
      - run:
          name: Install goss
          command: |
            # rather than give internet scripts SU rights, we install to local user bin and add to path
            export GOSS_DST=~/bin
            export PATH=$PATH:~/bin
            curl -fsSL https://goss.rocks/install | sh
            goss -version
      - run:
          name: Run dgoss Test
          command: dgoss run -p 8080:80 ${DOCKER_NAMESPACE}/${DOCKER_IMAGE}:$(docker version -f {{.Server.Arch}})-${CIRCLE_SHA1}

  push:
    description: "Pushes Docker Image to DockerHub"
    steps:
      - checkout
      - run:
          name: Push Image
          command: ./.ci/push.sh --image ${DOCKER_NAMESPACE}/${DOCKER_IMAGE}:${CIRCLE_SHA1}


executors:
  arm64:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium

  amd64:
    machine:
      image: ubuntu-2004:202010-01
    resource_class: medium


jobs:
  build-image:
    parameters:
      architecture:
        type: executor
    executor: << parameters.architecture >>
    steps:
      - set-build-tools-env
      - build
      - save-docker-image
    environment:
      DOCKER_IMAGE: multi-arch-demo
      SUPPORTED_ARCHITECTURES: "amd64 arm64"
      RELEASE_BRANCH: main
      DOCKER_NAMESPACE: drcrow

  test-image:
    parameters:
      architecture:
        type: executor
    executor: << parameters.architecture >>
    steps:
      - set-build-tools-env
      - load-docker-image
      - test
    environment:
      DOCKER_IMAGE: multi-arch-demo
      DOCKER_NAMESPACE: drcrow
      GOSS_SLEEP: 10

  push-image:
    parameters:
      architecture:
        type: executor
    executor: << parameters.architecture >>
    steps:
      - set-build-tools-env
      - load-docker-image
      - push
    environment:
      DOCKER_IMAGE: multi-arch-demo
      DOCKER_NAMESPACE: drcrow


workflows:
  demo:
    jobs:
      - build-image:
          name: "Building ARM64 Image"
          architecture: arm64
      - build-image:
          name: "Building AMD64 Image"
          architecture: amd64
      - test-image:
          name: "Testing ARM64 Image"
          requires:
            - "Building ARM64 Image"
          architecture: arm64
      - test-image:
          name: "Testing AMD64 Image"
          requires:
            - "Building AMD64 Image"
          architecture: amd64
      - push-image:
          name: "Pushing ARM64 Image"
          requires:
            - "Testing ARM64 Image"
          architecture: arm64
      - push-image:
          name: "Pushing AMD64 Image"
          requires:
            - "Testing AMD64 Image"
          architecture: amd64