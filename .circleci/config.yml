version: 2.1

commands:
  build:
    description: "Build Docker image via Build Tools"
    steps:
      - checkout
      - run:
          name: Build Docker Image
          command: "./.ci/build.sh -f Dockerfile --image ${DOCKER_IMAGE}:${CIRCLE_SHA1}"

  save-docker-image:
    description: "Saves a Docker image for future Jobs"
    steps:
      - run: "mkdir -p /tmp/docker-images/"
      - run:
          name: Saving Docker Image
          command: "docker save --output /tmp/docker-images/${DOCKER_NAMESPACE}-${DOCKER_IMAGE}-$(docker version -f {{.Server.Arch}})-${CIRCLE_SHA1}.tar ${DOCKER_NAMESPACE}/${DOCKER_IMAGE}:$(docker version -f {{.Server.Arch}})-${CIRCLE_SHA1}"
      - persist_to_workspace:
          root: /tmp
          paths:
            - docker-images/*

  load-docker-image:
    description: "Loads a Docker image"
    steps:
      - attach_workspace:
          at: /tmp
      - run:
            name: Loading Docker Image
            command: "docker load --input /tmp/docker-images/${DOCKER_NAMESPACE}-${DOCKER_IMAGE}-$(docker version -f {{.Server.Arch}})-${CIRCLE_SHA1}.tar"

  test:
    description: "Launches tests against the Docker image"
    steps:
      - checkout
      - run:
          name: Install goss
          command: |
            # rather than give internet scripts SU rights, we install to local user bin and add to path
            export GOSS_DST=~/bin
            export PATH=$PATH:~/bin
            curl -fsSL https://goss.rocks/install | sh
            goss -version
      - run:
          name: Run dgoss Test
          command: "dgoss run -p 8080:80 ${DOCKER_NAMESPACE}/${DOCKER_IMAGE}:$(docker version -f {{.Server.Arch}})-${CIRCLE_SHA1}"

executors:
  arm64:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium

  amd64:
    machine:
      image: ubuntu-2004:202010-01
    resource_class: medium

jobs:
  build-image:
    parameters:
      architecture:
        type: executor
    executor: << parameters.architecture >>
    steps:
      - build
      - save-docker-image
    environment:
      DOCKER_IMAGE: multi-arch-demo
      SUPPORTED_ARCHITECTURES: "amd64 arm64"
      GIT_BRANCH: main
      RELEASE_BRANCH: main
      DOCKER_NAMESPACE: drcrow
      FORCE_CI: true

  test-image:
    parameters:
      architecture:
        type: executor
    executor: << parameters.architecture >>
    steps:
      - load-docker-image
      - test
    environment:
      DOCKER_IMAGE: multi-arch-demo
      SUPPORTED_ARCHITECTURES: "amd64 arm64"
      GIT_BRANCH: main
      RELEASE_BRANCH: main
      DOCKER_NAMESPACE: drcrow
      FORCE_CI: true


workflows:
  demo:
    jobs:
      - build-image:
          name: build-image-arm64
          architecture: arm64
      - build-image:
          name: build-image-amd64
          architecture: amd64
      - test-image:
          name: test-image-arm64
          requires:
            - build-image-arm64
          architecture: arm64
      - test-image:
          name: test-image-amd64
          requires:
            - build-image-amd64
          architecture: amd64